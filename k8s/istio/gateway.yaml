# Istio Gateway Configuration for Spike Platform
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: spike-platform-gateway
  namespace: spike-platform
spec:
  selector:
    istio: ingressgateway
  servers:
  # Production domains
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "spike-platform.com"
    - "*.spike-platform.com"
    tls:
      httpsRedirect: true
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: spike-platform-tls
    hosts:
    - "spike-platform.com"
    - "*.spike-platform.com"
  # Development domain
  - port:
      number: 80
      name: http-dev
      protocol: HTTP
    hosts:
    - "dev.spike-platform.com"
    - "*.dev.spike-platform.com"
---
# Virtual Service for tenant-specific routing
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: spike-platform-routing
  namespace: spike-platform
spec:
  hosts:
  - "spike-platform.com"
  - "*.spike-platform.com"
  - "dev.spike-platform.com"
  - "*.dev.spike-platform.com"
  gateways:
  - spike-platform-gateway
  http:
  # BGU tenant routing
  - match:
    - headers:
        host:
          regex: "^bgu\\..*"
    route:
    - destination:
        host: auth-service
        port:
          number: 8001
        subset: bgu
      headers:
        request:
          add:
            x-tenant-id: "bgu"
    - destination:
        host: tenant-service
        port:
          number: 8002
        subset: bgu
      headers:
        request:
          add:
            x-tenant-id: "bgu"
    fault:
      delay:
        percentage:
          value: 0.1
        fixedDelay: 5s
    retries:
      attempts: 3
      perTryTimeout: 2s

  # TAU tenant routing
  - match:
    - headers:
        host:
          regex: "^tau\\..*"
    route:
    - destination:
        host: auth-service
        port:
          number: 8001
        subset: tau
      headers:
        request:
          add:
            x-tenant-id: "tau"
    - destination:
        host: tenant-service
        port:
          number: 8002
        subset: tau
      headers:
        request:
          add:
            x-tenant-id: "tau"
    retries:
      attempts: 3
      perTryTimeout: 2s

  # HUJI tenant routing
  - match:
    - headers:
        host:
          regex: "^huji\\..*"
    route:
    - destination:
        host: auth-service
        port:
          number: 8001
        subset: huji
      headers:
        request:
          add:
            x-tenant-id: "huji"
    - destination:
        host: tenant-service
        port:
          number: 8002
        subset: huji
      headers:
        request:
          add:
            x-tenant-id: "huji"
    retries:
      attempts: 3
      perTryTimeout: 2s

  # Auth Service API routes
  - match:
    - uri:
        prefix: "/api/auth"
    rewrite:
      uri: "/"
    route:
    - destination:
        host: auth-service
        port:
          number: 8001
    headers:
      request:
        add:
          x-forwarded-prefix: "/api/auth"
    corsPolicy:
      allowOrigins:
      - exact: "https://spike-platform.com"
      - regex: "https://.*\\.spike-platform\\.com"
      allowMethods:
      - POST
      - GET
      - PUT
      - DELETE
      - OPTIONS
      allowCredentials: true
      allowHeaders:
      - Authorization
      - Content-Type
      - X-Tenant-ID
      - X-Correlation-ID

  # Tenant Service API routes
  - match:
    - uri:
        prefix: "/api/tenant"
    rewrite:
      uri: "/"
    route:
    - destination:
        host: tenant-service
        port:
          number: 8002
    headers:
      request:
        add:
          x-forwarded-prefix: "/api/tenant"

  # Default routing for main domain
  - match:
    - uri:
        prefix: "/"
    route:
    - destination:
        host: web-frontend
        port:
          number: 3000
---
# Destination Rules for service subsets
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: auth-service-destination
  namespace: spike-platform
spec:
  host: auth-service
  trafficPolicy:
    connectionPool:
      tcp:
        maxConnections: 100
      http:
        http1MaxPendingRequests: 50
        http2MaxRequests: 100
        maxRequestsPerConnection: 10
        maxRetries: 3
        consecutiveGatewayErrors: 5
        interval: 30s
        baseEjectionTime: 30s
        maxEjectionPercent: 50
    loadBalancer:
      simple: LEAST_CONN
    outlierDetection:
      consecutiveGatewayErrors: 5
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
  subsets:
  - name: bgu
    labels:
      tenant: bgu
    trafficPolicy:
      connectionPool:
        http:
          maxRequestsPerConnection: 5
  - name: tau
    labels:
      tenant: tau
    trafficPolicy:
      connectionPool:
        http:
          maxRequestsPerConnection: 5
  - name: huji
    labels:
      tenant: huji
    trafficPolicy:
      connectionPool:
        http:
          maxRequestsPerConnection: 5
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: tenant-service-destination
  namespace: spike-platform
spec:
  host: tenant-service
  trafficPolicy:
    connectionPool:
      tcp:
        maxConnections: 50
      http:
        http1MaxPendingRequests: 25
        http2MaxRequests: 50
        maxRequestsPerConnection: 5
        maxRetries: 3
    loadBalancer:
      simple: ROUND_ROBIN
    outlierDetection:
      consecutiveGatewayErrors: 3
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 30
  subsets:
  - name: bgu
    labels:
      tenant: bgu
  - name: tau
    labels:
      tenant: tau
  - name: huji
    labels:
      tenant: huji