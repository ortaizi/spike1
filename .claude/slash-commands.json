{
  "$schema": "https://anthropic.com/claude-code/slash-commands-schema.json",
  "commands": [
    {
      "name": "dev-hebrew",
      "description": "Start development server with Hebrew RTL focus",
      "command": "npm run dev",
      "env": {
        "LOCALE": "he-IL",
        "RTL": "true",
        "DEBUG": "spike:*"
      },
      "category": "🌍 Hebrew Development"
    },
    {
      "name": "test-rtl",
      "description": "Run comprehensive Hebrew/RTL testing suite",
      "command": "npm run test:hebrew && npm run lint:rtl && npm run visual:rtl",
      "category": "🧪 Hebrew Testing"
    },
    {
      "name": "fix-rtl",
      "description": "Auto-fix common RTL issues and run validation",
      "command": "npx eslint --fix '**/*.{ts,tsx}' --rule '{\"no-restricted-syntax\": [\"error\", {\"selector\": \"CallExpression[callee.property.name=/^(marginLeft|marginRight|paddingLeft|paddingRight)$/]\", \"message\": \"Use logical properties instead.\"}]}' && npm run format",
      "category": "🔧 RTL Fixes"
    },
    {
      "name": "db-sync",
      "description": "Sync database types after schema changes (MANDATORY)",
      "command": "npm run db:generate && npm run type-check",
      "category": "🗄️ Database"
    },
    {
      "name": "hebrew-check",
      "description": "Validate Hebrew content and RTL compliance",
      "command": "node -e \"console.log('🌍 Checking Hebrew/RTL compliance...'); const files = require('child_process').execSync('find apps/web -name \\\"*.tsx\\\" | head -10', {encoding: 'utf8'}).trim().split('\\n'); files.forEach(f => { const content = require('fs').readFileSync(f, 'utf8'); if (/[א-ת]/.test(content) && !/dir=[\\\"']rtl[\\\"']/.test(content)) console.log('⚠️ Missing RTL:', f); }); console.log('✅ Hebrew check complete');\"",
      "category": "🔍 Validation"
    },
    {
      "name": "moodle-test",
      "description": "Test university Moodle integration",
      "command": "cd apps/scraper && python -m pytest tests/ -k 'hebrew or bgu' --verbose",
      "category": "🏫 University Integration"
    },
    {
      "name": "screenshot-rtl",
      "description": "Take RTL screenshots for visual verification",
      "command": "playwright test --config playwright.config.ts --project='Hebrew RTL Desktop' --update-snapshots",
      "category": "📸 Visual Testing"
    },
    {
      "name": "build-check",
      "description": "Full production build check with Hebrew support",
      "command": "npm run build && npm run test:hebrew && echo '✅ Production ready with Hebrew support'",
      "category": "🚀 Production"
    },
    {
      "name": "quick-hebrew",
      "description": "Quick Hebrew component validation",
      "command": "vitest run --grep='Hebrew|RTL' --passWithNoTests --silent && echo '✅ Hebrew tests passing'",
      "category": "⚡ Quick Checks"
    },
    {
      "name": "academic-seed",
      "description": "Seed database with Hebrew academic test data",
      "command": "npm run db:seed && echo '🎓 Hebrew academic data seeded'",
      "env": {
        "SEED_LOCALE": "he-IL",
        "ACADEMIC_YEAR": "2024"
      },
      "category": "🎓 Academic Data"
    },
    {
      "name": "debug-scraper",
      "description": "Debug university scraper with Hebrew output",
      "command": "cd apps/scraper && python debug_moodle.py --university bgu --verbose",
      "category": "🐛 Debugging"
    },
    {
      "name": "validate-all",
      "description": "Complete validation workflow before commit/push",
      "command": "npm run type-check && npm run lint:rtl && npm run test:hebrew && npm run format:check && echo '✅ All validations passed - ready to commit'",
      "category": "✅ Complete Validation"
    }
  ],
  "categories": [
    {
      "name": "🌍 Hebrew Development",
      "description": "Commands for Hebrew/RTL focused development"
    },
    {
      "name": "🧪 Hebrew Testing",
      "description": "Testing commands with Hebrew/RTL focus"
    },
    {
      "name": "🔧 RTL Fixes",
      "description": "Commands to fix RTL layout issues"
    },
    {
      "name": "🗄️ Database",
      "description": "Database operations with Hebrew support"
    },
    {
      "name": "🔍 Validation",
      "description": "Hebrew/RTL validation and compliance checks"
    },
    {
      "name": "🏫 University Integration",
      "description": "Commands for university system integration"
    },
    {
      "name": "📸 Visual Testing",
      "description": "Visual regression testing for RTL"
    },
    {
      "name": "🚀 Production",
      "description": "Production readiness checks"
    },
    {
      "name": "⚡ Quick Checks",
      "description": "Fast development feedback loops"
    },
    {
      "name": "🎓 Academic Data",
      "description": "Academic platform specific data operations"
    },
    {
      "name": "🐛 Debugging",
      "description": "Debugging tools and utilities"
    },
    {
      "name": "✅ Complete Validation",
      "description": "Comprehensive validation workflows"
    }
  ]
}