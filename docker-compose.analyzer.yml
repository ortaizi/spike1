# 🎓 Spike Course Analyzer - Docker Compose
# =========================================
# הגדרת שירותים למערכת ניתוח קורסים אוטומטית

version: '3.8'

services:
  # מערכת ניתוח קורסים
  course-analyzer:
    build:
      context: ./spike-analyzer
      dockerfile: Dockerfile
    container_name: spike-course-analyzer
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://analyzer:password@analyzer-db:5432/course_analyzer
      - REDIS_URL=redis://analyzer-redis:6379
      - LOG_LEVEL=INFO
      - ENVIRONMENT=production
    volumes:
      - ./spike-analyzer/data:/app/data
      - ./spike-analyzer/logs:/app/logs
      - ./spike-analyzer/cache:/app/cache
    depends_on:
      - analyzer-db
      - analyzer-redis
    networks:
      - analyzer-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # דטה בייס PostgreSQL
  analyzer-db:
    image: postgres:15-alpine
    container_name: spike-analyzer-db
    environment:
      - POSTGRES_DB=course_analyzer
      - POSTGRES_USER=analyzer
      - POSTGRES_PASSWORD=password
    volumes:
      - analyzer-db-data:/var/lib/postgresql/data
      - ./spike-analyzer/init:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    networks:
      - analyzer-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U analyzer -d course_analyzer"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis לקאש
  analyzer-redis:
    image: redis:7-alpine
    container_name: spike-analyzer-redis
    command: redis-server --appendonly yes
    volumes:
      - analyzer-redis-data:/data
    ports:
      - "6380:6379"
    networks:
      - analyzer-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ניטור וניהול
  analyzer-monitor:
    image: grafana/grafana:latest
    container_name: spike-analyzer-monitor
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - analyzer-grafana-data:/var/lib/grafana
      - ./spike-analyzer/monitoring/grafana:/etc/grafana/provisioning
    ports:
      - "3001:3000"
    networks:
      - analyzer-network
    restart: unless-stopped
    depends_on:
      - analyzer-db

  # Prometheus לניטור
  analyzer-prometheus:
    image: prom/prometheus:latest
    container_name: spike-analyzer-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./spike-analyzer/monitoring/prometheus:/etc/prometheus
      - analyzer-prometheus-data:/prometheus
    ports:
      - "9091:9090"
    networks:
      - analyzer-network
    restart: unless-stopped

  # Nginx כפרוקסי
  analyzer-nginx:
    image: nginx:alpine
    container_name: spike-analyzer-nginx
    volumes:
      - ./spike-analyzer/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./spike-analyzer/nginx/ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - course-analyzer
    networks:
      - analyzer-network
    restart: unless-stopped

volumes:
  analyzer-db-data:
    driver: local
  analyzer-redis-data:
    driver: local
  analyzer-grafana-data:
    driver: local
  analyzer-prometheus-data:
    driver: local

networks:
  analyzer-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 