{{- if .Values.authService.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "spike-platform.fullname" . }}-auth-service
  labels:
    {{- include "spike-platform.labels" . | nindent 4 }}
    app.kubernetes.io/component: auth-service
spec:
  {{- if not .Values.authService.autoscaling.enabled }}
  replicas: {{ .Values.authService.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "spike-platform.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: auth-service
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/auth-service-configmap.yaml") . | sha256sum }}
      labels:
        {{- include "spike-platform.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: auth-service
        version: v1
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "spike-platform.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.security.securityContext | nindent 8 }}
      containers:
        - name: auth-service
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
            capabilities:
              drop:
              - ALL
          image: "{{ .Values.global.imageRegistry }}/{{ .Values.authService.image.repository }}:{{ .Values.authService.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          ports:
            - name: http
              containerPort: 8001
              protocol: TCP
          env:
            - name: PORT
              value: "8001"
            - name: DB_HOST
              value: {{ include "spike-platform.postgresql.fullname" . }}
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              value: {{ .Values.postgresql.auth.database }}
            - name: DB_USER
              value: {{ .Values.postgresql.auth.username }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "spike-platform.postgresql.fullname" . }}
                  key: password
            - name: REDIS_HOST
              value: {{ include "spike-platform.redis.fullname" . }}-master
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "spike-platform.redis.fullname" . }}
                  key: redis-password
            {{- range $key, $value := .Values.authService.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "spike-platform.fullname" . }}-auth-config
          {{- if .Values.authService.probes.liveness }}
          livenessProbe:
            {{- toYaml .Values.authService.probes.liveness | nindent 12 }}
          {{- end }}
          {{- if .Values.authService.probes.readiness }}
          readinessProbe:
            {{- toYaml .Values.authService.probes.readiness | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.authService.resources | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: logs
              mountPath: /usr/src/app/logs
      volumes:
        - name: tmp
          emptyDir: {}
        - name: logs
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "spike-platform.fullname" . }}-auth-service
  labels:
    {{- include "spike-platform.labels" . | nindent 4 }}
    app.kubernetes.io/component: auth-service
spec:
  type: {{ .Values.authService.service.type }}
  ports:
    - port: {{ .Values.authService.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "spike-platform.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: auth-service
---
{{- if .Values.authService.autoscaling.enabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "spike-platform.fullname" . }}-auth-service
  labels:
    {{- include "spike-platform.labels" . | nindent 4 }}
    app.kubernetes.io/component: auth-service
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "spike-platform.fullname" . }}-auth-service
  minReplicas: {{ .Values.authService.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.authService.autoscaling.maxReplicas }}
  metrics:
    {{- if .Values.authService.autoscaling.targetCPUUtilization }}
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{ .Values.authService.autoscaling.targetCPUUtilization }}
    {{- end }}
    {{- if .Values.authService.autoscaling.targetMemoryUtilization }}
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: {{ .Values.authService.autoscaling.targetMemoryUtilization }}
    {{- end }}
{{- end }}
{{- end }}