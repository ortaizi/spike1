# Spike Platform Environment Variables Template
# Copy this file to .env and fill in your values
# NEVER commit .env files to version control!

# ============================================
# Authentication & Security
# ============================================

# NextAuth Configuration (Required)
# Generate with: openssl rand -base64 32
NEXTAUTH_SECRET=<generate-with-openssl-rand-base64-32>
NEXTAUTH_URL=http://localhost:3000

# JWT Configuration (Required)
# Generate with: openssl rand -hex 32
JWT_SECRET=<generate-with-openssl-rand-hex-32>
JWT_REFRESH_SECRET=<generate-with-openssl-rand-hex-32>
JWT_ACCESS_EXPIRE=1h
JWT_REFRESH_EXPIRE=7d

# Encryption Key (Required)
# Generate with: openssl rand -hex 32
ENCRYPTION_KEY=<generate-with-openssl-rand-hex-32>

# ============================================
# Database Configuration
# ============================================

# PostgreSQL Connection (Required)
DATABASE_URL=postgresql://user:password@localhost:5432/spike_db
DATABASE_PASSWORD=<strong-password>

# Supabase Configuration (Required)
NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=<your-anon-key>
SUPABASE_SERVICE_ROLE_KEY=<your-service-role-key>

# ============================================
# Cache & Message Queue
# ============================================

# Redis Configuration (Required)
REDIS_URL=redis://:password@localhost:6379
REDIS_PASSWORD=<strong-password>

# RabbitMQ Configuration (Required)
RABBITMQ_DEFAULT_USER=spike_user
RABBITMQ_DEFAULT_PASS=<strong-password>
RABBITMQ_DEFAULT_VHOST=spike_platform

# ============================================
# OAuth Providers
# ============================================

# Google OAuth (Required for Google login)
# Get from: https://console.cloud.google.com/
GOOGLE_CLIENT_ID=<your-google-client-id>
GOOGLE_CLIENT_SECRET=<your-google-client-secret>

# ============================================
# Third-party Services
# ============================================

# Context7 API (Optional)
# Get from: Context7 Dashboard
CONTEXT7_API_KEY=<your-context7-api-key>

# Twilio (Optional - for SMS notifications)
# Get from: https://www.twilio.com/console
TWILIO_ACCOUNT_SID=<your-twilio-account-sid>
TWILIO_AUTH_TOKEN=<your-twilio-auth-token>
TWILIO_PHONE_NUMBER=<your-twilio-phone-number>

# ============================================
# Application Configuration
# ============================================

# Node Environment
NODE_ENV=development

# Application URLs
APP_URL=http://localhost:3000
API_URL=http://localhost:3000/api

# AWS Configuration (Optional - for production)
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=<your-aws-access-key>
AWS_SECRET_ACCESS_KEY=<your-aws-secret-key>

# ============================================
# Development & Testing
# ============================================

# Only set these in .env.test for testing
# TEST_NEXTAUTH_SECRET=<test-secret-min-32-chars>
# TEST_DATABASE_URL=postgresql://test:test@localhost:5432/test_db
# TEST_BGU_EMAIL=test@example.test
# TEST_BGU_PASSWORD=<test-password>

# ============================================
# Feature Flags (Optional)
# ============================================

ENABLE_DEBUG_LOGGING=false
ENABLE_PERFORMANCE_MONITORING=false
ENABLE_ERROR_TRACKING=false

# ============================================
# IMPORTANT SECURITY NOTES:
# ============================================
# 1. Generate all secrets using cryptographically secure methods
# 2. Use different secrets for development, staging, and production
# 3. Rotate secrets every 30-90 days
# 4. Never use default or example values in production
# 5. Store production secrets in a secure secret manager (AWS Secrets Manager, HashiCorp Vault, etc.)
# 6. Ensure .env is in .gitignore
# 7. Use strong, unique passwords (minimum 16 characters)
# 8. Enable 2FA on all third-party service accounts